alias self db
# alias pin1 d0 # invalid pins...?
# alias pin2 d1 # debug LED
alias filtersOK r0
alias filterStatus0 r1
alias filterStatus1 r2
alias filterPresent0 r3
alias filterPresent1 r4
alias gasPressure r5
alias gasOk r6
alias intakeTemp r7
alias intakeTempOk r8
alias openDoor r9
alias inputRatioOK r10
alias inputRatio r11
alias runFiltration r12
alias needReplaceFilters r13

define kConst 273 # K - 273 = C
define maxTemp 130 # 130C
define maxPressure 19200 # 40mpa
define checkTempEnabled 1 # 0 = disabled, 1 = enabled
define dualGas 0 # 0 = single gas, 1 = dual gas
define inputRatioEnabled 1 # 0 = disabled, 1 = enabled
define inputRatioDesired 0.25 # 25%
define ledHash 1944485013
define filterLEDNameHash HASH("Filter LED")

mainLoop:
    yield
    jal checkFilters
    beqal dualGas 0 doRunSingleGas
    beqal dualGas 1 doRunDualGas
    jal checkInputRatio
    jal checkTemp
    jal doFilterGas
    j mainLoop

filterLED:
    sbn ledHash filterLEDNameHash On needReplaceFilters
    j ra

checkFilters:
    ls filterPresent0 self 0 Occupied
    ls filterPresent1 self 1 Occupied
    ls filterStatus0 self 0 Quantity
    ls filterStatus1 self 1 Quantity
    j ra

doRunDualGas:
    sgt filterStatus0 filterStatus0 0
    sgt filterStatus1 filterStatus1 0
    and filtersOK filterStatus0 filterStatus1
    and runFiltration filterStatus0 filterStatus1
    seqz needReplaceFilters filtersOK
    j ra

doRunSingleGas:
    sgt filterStatus0 filterStatus0 0
    sgt filterStatus1 filterStatus1 0
    or filtersOK filterStatus0 filterStatus1
    or runFiltration filterStatus0 filterStatus1
    and needReplaceFilters filterStatus0 filterStatus1
    not needReplaceFilters needReplaceFilters
    j ra

checkInputRatio:
    l inputRatio self RatioOxygenInput # change RatioOxygenInput to match your input gas
    beq inputRatioEnabled 0 ra # skip if disabled
    sgt inputRatioOK inputRatio inputRatioDesired
    and runFiltration runFiltration inputRatioOK # only run if ratio is OK
    j ra

checkTemp:
    move intakeTempOk 1
    beq checkTempEnabled 0 ra # skip if disabled
    l intakeTemp self TemperatureInput
    sub intakeTemp intakeTemp kConst
    slt intakeTempOk intakeTemp maxTemp
    j ra

doFilterGas:
    l gasPressure self PressureOutput
    slt gasOk gasPressure maxPressure
    and runFiltration runFiltration gasOk
    and runFiltration runFiltration intakeTempOk

    l openDoor self Open
    not openDoor runFiltration
    s self Mode runFiltration
    s self Open openDoor
    j ra